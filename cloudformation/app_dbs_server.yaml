Description: >
  Ugochi Jones / Udacity 2021 Capstone
  Creates the server and database components of the capstone infrastructure.

# Parameters
# ----------
Parameters:
  EnvironmentName:
    Description: A name that will be prefised to the resource names
    Type: String

  JumpBoxInstanceTypeParameter:
    Type: "String"
    Description: |
     "Instance Type for JumpBox. Enter t2.micro, t3.medium, m1.small, or m1.large. Default is t2.micro."
    Default : "t2.micro"
    AllowedValues : 
      - "t2.micro" 
      - "t3.medium" 
      - "m1.small" 
      - "t3.small"
  
  JumpBoxKeyNameParameter:
    Type: "String"
    Description: The Key-Pair name to associate with the JumpBox to support SSH connection.
  
  # May remove because I don't want that in the git repository
  PersonalIPParameter:
    Type: "String"
    Description: Personal Ips that are allowed to access the JumpBox

  DBEngineVersion:
    Type: "String"
    Default: 13.5 # Main try 14.1
    Description: Personal Ips that are allowed to access the JumpBox

  AppDBInstanceID:
    Default: appDB-instanceID
    Description: Application database instance id
    Type: String
    MinLength: '1'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: >-
      Must begin with a letter and must not end with a hyphen or contain two
      consecutive hyphens.
  
  AppDBInstanceClass:
    Default: db.t4g.micro # or db.t3.micro
    Description: DB instance class
    Type: String
    ConstraintDescription: Must select a valid DB instance type.

  AppDBName:
    Default: aurora-postgresql-appDB
    Description: Name for the application Database
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric characters.
  
  AppDBUsername:
    NoEcho: 'true'
    Description: Username for Applicatin Postgres Database
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  
  AppDBPassword:
    NoEcho: 'true'
    Description: Password Application Postgres Database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.

# Resources
# ---------
Resources:
  AppDBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Security group for application database
      VpcId: 
        Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 5432 # This is port for SSH
          ToPort: 5432
          CidrIp:
            Fn::ImportValue:
              !Sub ${EnvironmentName}-VpcCIDR # Only for ids in VPC
        - IpProtocol: tcp
          FromPort: 5432 # This is port for SSH
          ToPort: 5432
          CidrIp: !Ref PersonalIPParameter # From my personal ip

  # Will probably make this security group in the console, so that my ip stays private.
  PersonalSSHSecGroup:
    # Security groups are linked to a resource (e.g., Servers, databases, or Load Balancers)
    Type: AWS::EC2::SecurityGroup
    #DeletionPolicy: Retain
    Properties:
      GroupDescription: Enable SSH access via port 22
      VpcId: 
        Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22 # This is port for SSH
          ToPort: 22
          #CidrIp: 0.0.0.0/0 # Wild card for testing 
          CidrIp: PersonalIPParameter #My personal 
      
      # Allow to any internal address.
      SecurityGroupEgress:
        - IpProtocol: tcp
          # Connect to servers in private subnet using port 22 (ssh)
          FromPort: 22
          ToPort: 22
          CidrIp:
            Fn::ImportValue:
              !Sub ${EnvironmentName}-VpcCIDR 

  # I might need to attached an elastic ip to this instance
  # because I want Auto-assign Public IP.
  JumpBox:
    Type: AWS::EC2::Instance
    Description: EC2 instance that I alone can use to access the private servers.
    DependsOn: PersonalSSHSecGroup
    Properties:
      InstanceType: t3.small
      ImageId: ami-087c17d1fe0178315
      KeyName: !Ref JumpBoxKeyNameParameter
      NetworkInterfaces:
        - AssociatePublicIpAddress: "true"
          DeviceIndex: "0"
          GroupSet: 
            - Ref: "PersonalSSHSecGroup"
          SubnetId: 
            Fn::ImportValue:
              !Sub ${EnvironmentName}-PUB1-SN
      Tags:
        - Key: "Name"
          Value: "JumpBox"
        - Key: "Purpose"
          Value: "Bastion host (aka. JumpBox)"
        - Key: "Project"
          Value: "Udacity Project Capstone"
  
  # General Postgres Database (cheaper)
  # -----------------------------------------------
  # In reality I would have two different databases. One for analytics and one for the application
  # However, I am going to combine to reduce costs.        
  AppDB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Ref AppDBInstanceID
      DBName: !Ref AppDBName
      Engine: postgresql
      EngineVersion: !Ref DBEngineVersion
      MasterUsername: !Ref AppDBUsername #Not sure if I need this but will keep
      MasterUserPassword: !Ref AppDBPassword
      PubliclyAccessible: true # FOR TESTING true, but will be false when done
      DBInstanceClass: !Ref AppDBInstanceClass
      AutoMinorVersionUpgrade: true
      VPCSecurityGroups:
        - !Ref AppDBSecurityGroup
      Tags:
        - Key: "Name"
          Value: !Ref AppDBName
        - Key: "Purpose"
          Value: "Holds analytics and application data"
        - Key: "Project"
          Value: "Udacity Project Capstone"
        - Key: "Notes"
          Value: "In the future, will separate into two different databases (application and analytics)"

  
  

