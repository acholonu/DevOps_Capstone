# Workspaces specify where to find user code in order to load it for Dagit and the Dagster CLI.
# See our documentation overview on Workspaces: https://docs.dagster.io/overview/repositories-workspaces/workspaces
# or https://docs.dagster.io/concepts/repositories-workspaces/workspaces#defining-a-workspace
load_from:
  #- python_package: dagster_capstone
  #- python_file: repository.py
  #- relative path from workspace
  - python_file: 
      relative_path: dagster_capstone/repository.py
      working_directory: .
      attribute: dagster_capstone # name of the function in repository.py, that returns RepositoryDefinition
      location_name: Tutorial # Custom name that I give to the repository
  
  # Each entry here corresponds to a container that exposes a gRPC server.
#   - grpc_server:
#       host: ${POSTGRES_HOSTNAME}
#       port: 4000
#       location_name: User Code Server (gRPC)
#       relative_path: dagster_capstone/repository.py
#       working_directory: .

# Because I am not running my own gRPC server, If I change user code, I need
# to rebuild the container each time. This is connected to the user_code: section
# in the docker-compose.yml
