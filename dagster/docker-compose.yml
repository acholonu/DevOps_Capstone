version: '3.9'
services:
  dagit:
    build:
      context: . # what files does the container have access to from the host system
      dockerfile: ./Dockerfile # What docker file to run
    image: "${REGISTRY_URL}/learning/dagit:${VERSION}"
    env_file: .env # This will be overwritten by environment section
    container_name: dagit
    environment:
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    #command: "dagit -h 0.0.0.0 -p 3000 -w workspace.yaml"
    ports:
      - "3000:3000"
    depends_on:
      - postgresql
    restart: always

# This service runs the postgres DB used by dagster for run storage, schedule
  # storage, and event log storage. In a real deployment, you might choose to
  # remove this in favor of an RDS instance.
  postgresql:
    image: postgres:latest
    container_name: dagster-db-ctnr
    env_file:
      - .env
    environment:
      # Hostname needs to always be the name of the service (i.e., postgresql)
      # This way the two services (postgresql and dagit can always communicate)
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME} 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - default
    ports:
      - 5405:5432 #Note change
    restart: always
    volumes:
      - ./postgres-data:/var/lib/postgresql/data